/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void analyzingWeatherDataTest() {
        int[][] testingWeather = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        String testingString = "High: 72\n" +
                "Low: 51\n" +
                "Never saw temperature: 63\n" +
                "Never saw temperature: 67\n" +
                "Never saw temperature: 68\n" +
                "Never saw temperature: 69";

        assertEquals(App.analyzingWeatherData(testingWeather), testingString);

    }

    @Test
    void tallyTest() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        assertEquals(App.tally(votes), "Bush");
    }

    @Test
    void javaScriptLinterTester() {
        String testingString = "Line 3: Missing semicolon.\n" +
                "Line 5: Missing semicolon.\n" +
                "Line 11: Missing semicolon.\n" +
                "Line 13: Missing semicolon.\n" +
                "Line 15: Missing semicolon.\n" +
                "Line 26: Missing semicolon.\n" +
                "Line 28: Missing semicolon.\n" +
                "Line 32: Missing semicolon.\n" +
                "Line 36: Missing semicolon.\n" +
                "Line 40: Missing semicolon.\n" +
                "Line 41: Missing semicolon.\n" +
                "Line 42: Missing semicolon.\n" +
                "Line 50: Missing semicolon.\n" +
                "Line 51: Missing semicolon.\n" +
                "Line 53: use double quotation instead of single quotation\n" +
                "Line 64: Missing semicolon.\n" +
                "Line 70: Missing semicolon.\n" +
                "Line 70: use double quotation instead of single quotation\n" +
                "Line 71: Missing semicolon.\n" +
                "Line 71: use double quotation instead of single quotation\n" +
                "Line 72: Missing semicolon.\n" +
                "Line 72: use double quotation instead of single quotation\n" +
                "Line 73: Missing semicolon.\n" +
                "Line 73: use double quotation instead of single quotation\n" +
                "Line 74: Missing semicolon.\n" +
                "Line 76: Missing semicolon.\n" +
                "Line 76: use double quotation instead of single quotation\n" +
                "Line 77: Missing semicolon.\n" +
                "Line 77: use double quotation instead of single quotation\n" +
                "Line 78: Missing semicolon.\n" +
                "Line 78: use double quotation instead of single quotation\n" +
                "Line 79: Missing semicolon.\n" +
                "Line 79: use double quotation instead of single quotation\n" +
                "Line 80: Missing semicolon.\n" +
                "Line 82: Missing semicolon.\n" +
                "Line 82: use double quotation instead of single quotation\n" +
                "Line 83: Missing semicolon.\n" +
                "Line 83: use double quotation instead of single quotation\n" +
                "Line 84: Missing semicolon.\n" +
                "Line 84: use double quotation instead of single quotation\n" +
                "Line 85: Missing semicolon.\n" +
                "Line 85: use double quotation instead of single quotation\n" +
                "Line 86: Missing semicolon.\n" +
                "Line 88: Missing semicolon.\n" +
                "Line 88: use double quotation instead of single quotation\n" +
                "Line 89: Missing semicolon.\n" +
                "Line 89: use double quotation instead of single quotation\n" +
                "Line 90: Missing semicolon.\n" +
                "Line 90: use double quotation instead of single quotation\n" +
                "Line 91: Missing semicolon.\n" +
                "Line 91: use double quotation instead of single quotation\n" +
                "Line 92: Missing semicolon.\n" +
                "Line 94: Missing semicolon.\n" +
                "Line 94: use double quotation instead of single quotation\n" +
                "Line 95: Missing semicolon.\n" +
                "Line 95: use double quotation instead of single quotation\n" +
                "Line 96: Missing semicolon.\n" +
                "Line 96: use double quotation instead of single quotation\n" +
                "Line 97: Missing semicolon.\n" +
                "Line 97: use double quotation instead of single quotation\n" +
                "Line 98: Missing semicolon.\n" +
                "Line 98: use double quotation instead of single quotation\n" +
                "Line 99: Missing semicolon.\n" +
                "Line 99: use double quotation instead of single quotation\n" +
                "Line 100: Missing semicolon.\n" +
                "Line 100: use double quotation instead of single quotation\n" +
                "Line 101: Missing semicolon.\n" +
                "Line 101: use double quotation instead of single quotation\n";
        Path withALotOfError = Paths.get("src/test/resources/gates.js");
        assertEquals(App.javaScriptLinter(withALotOfError), testingString);

        String allFineString = "All Perfect No Error in your js file";
        Path allFinePath = Paths.get("src/test/resources/allfine.js");
        assertEquals(allFineString, App.javaScriptLinter(allFinePath));

        Path emptyPath = Paths.get("src/test/resources/emptyFile.js");
        assertEquals(allFineString, App.javaScriptLinter(emptyPath));

        String someError = "Line 3: Missing semicolon.\n" +
                "Line 5: Missing semicolon.\n" +
                "Line 7: Missing semicolon.\n" +
                "Line 17: Missing semicolon.\n" +
                "Line 19: Missing semicolon.\n" +
                "Line 22: Missing semicolon.\n" +
                "Line 23: Missing semicolon.\n" +
                "Line 24: Missing semicolon.\n" +
                "Line 32: Missing semicolon.\n" +
                "Line 33: Missing semicolon.\n" +
                "Line 35: use double quotation instead of single quotation\n" +
                "Line 42: Missing semicolon.\n" +
                "Line 46: Missing semicolon.\n" +
                "Line 46: use double quotation instead of single quotation\n" +
                "Line 47: Missing semicolon.\n" +
                "Line 47: use double quotation instead of single quotation\n" +
                "Line 48: Missing semicolon.\n" +
                "Line 48: use double quotation instead of single quotation\n" +
                "Line 49: Missing semicolon.\n" +
                "Line 49: use double quotation instead of single quotation\n" +
                "Line 50: Missing semicolon.\n";
        Path somePath = Paths.get("src/test/resources/someError.js");
        assertEquals(someError, App.javaScriptLinter(somePath));

        String oneError = "Line 40: Missing semicolon.\n" +
                "Line 53: use double quotation instead of single quotation\n" +
                "Line 64: Missing semicolon.\n";
        Path onePath = Paths.get("src/test/resources/oneError.js");
        assertEquals(oneError, App.javaScriptLinter(onePath));
    }

}
